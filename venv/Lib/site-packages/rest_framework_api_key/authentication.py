from rest_framework.authentication import BaseAuthentication
from rest_framework.exceptions import AuthenticationFailed
from rest_framework_api_key.models import APIKey


class APIKeyAuthentication(BaseAuthentication):
    def authenticate(self, request):
        # Check for the 'Authorization' header
        api_key = request.headers.get('Authorization')

        if not api_key:
            return None

        # Check for Bearer token format (optional but recommended)
        if not api_key.startswith('Bearer '):
            raise AuthenticationFailed('Authorization header must start with "Bearer "')

        # Extract the actual API key from the header
        api_key = api_key.split(' ')[1]

        try:
            key = APIKey.objects.get(key=api_key)
        except APIKey.DoesNotExist:
            raise AuthenticationFailed('Invalid API Key')

        # Since you're not using a user model, you can return the key and None
        return (None, key)  # First value is user (None), second is the APIKey object
